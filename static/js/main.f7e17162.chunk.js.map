{"version":3,"sources":["components/Users/Users.module.css","assets/images/user2.jpg","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","assets/images/loader2.gif","components/Profile/MyPosts/Post/Post.module.css","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","redux/dialogs-reducer.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/common/FormsControl/FormsControl.js","utils/validators/validator.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Users/user.jsx","components/common/Paginator/Paginator.jsx","components/Users/users.jsx","api/api.js","redux/users-reducer.js","components/common/preloader/preloader.js","redux/user-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/login/login.jsx","redux/app-reducer.js","App.js","serviceWorker.js","redux/redux-store.js","index.js","components/Dialogs/Dialogs.module.css","components/common/FormsControl/FormsControl.module.css","components/Nav/Nav.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css"],"names":["module","exports","News","Music","Settings","initialState","dialogs","id","name","avatar","messages","message","dialogsReducer","state","action","type","body","newMessageBody","DialogItem","props","path","className","styles","dialog","active","to","src","MessageItem","Textarea","input","meta","hasError","touched","error","formControl","Input","required","value","maxLengthCreator","maxLength","length","max10","MessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","dialogsPage","dialogsElements","map","d","key","messagesElements","m","isAuth","dialogsItems","values","sendMessage","withAuthRedirect","Component","RedirectComponent","this","React","connect","auth","DialogsContainer","compose","dispatch","sendMessageCreator","User","user","folowingInProgress","unfollow","follow","photos","small","userPhoto","followed","disabled","some","onClick","ghost","status","Paginator","totalUsersCount","currentPage","pageSize","onPageChanged","portionsSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumner","setPortionNumner","leftPortionPageNunber","rightPortionPageNunber","paginator","filter","p","selectPage","pageNumber","e","Users","users","u","instance","axios","withCredentials","baseURL","headers","usersAPI","get","then","response","data","userId","post","delete","console","warn","profileAPI","getProfile","getStatus","updateStatus","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","email","password","rememberMe","captcha","securityAPI","isFetching","setUsersAC","setCurrentPageAC","toggleIsFetchingAC","toggleFolowingProgressAC","usersReducer","count","Preloader","preloader","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFolowingInProgress","UsersContainer","getUsersThunk","toggleFolowingProgress","resultCode","followAC","unfollowAC","setCurrentPage","a","items","totalCount","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","currentTarget","onBlur","autoFocus","ProfileDataFormRedux","formSummaryError","Object","keys","contacts","style","contact","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","discriptionBlock","large","mainPhoto","target","files","initialValues","posts","likesCount","newPostText","getUserProfile","profileReducer","newPost","stateCopy","postId","Post","item","maxLength10","MyPosts","memo","PostsElements","postsBlock","MyPostFormRedux","addPost","MyPostsContainer","profilePage","addPostActionCreator","Profile","ProfileContainer","match","params","authUserId","history","refreshProfile","prevProps","prevState","file","getState","stopSubmit","_error","Promise","reject","withRouter","Header","Layout","span","theme","mode","defaultSelectedKeys","Item","backgroundColor","icon","UserOutlined","loginBlock","login","logout","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","getCaptchaUrl","url","authReducer","HeaderContainer","LoginReduxForm","initializated","appReducer","SubMenu","Menu","Content","Footer","Sider","App","initializeApp","padding","margin","width","defaultOpenKeys","height","title","LaptopOutlined","minHeight","render","textAlign","app","promise","all","Boolean","window","location","hostname","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f7e17162.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__fQI4x\",\"loader\":\"Users_loader__1-JxN\"};","module.exports = __webpack_public_path__ + \"static/media/user2.8793711e.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1l2VB\",\"pageNumber\":\"Paginator_pageNumber__15rEo\",\"selectPage\":\"Paginator_selectPage__38Z97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2Cbyl\",\"posts\":\"MyPosts_posts__1wC7d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__-hfIS\",\"loginBlock\":\"Header_loginBlock__DVon8\",\"name\":\"Header_name__2nghL\"};","module.exports = __webpack_public_path__ + \"static/media/loader2.6fb841a4.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__c76Do\"};","import React from 'react';\r\nimport styles from './News.module.css';\r\nimport { Button } from 'antd';\r\n\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default News;","import React from 'react';\r\nimport styles from './Music.module.css';\r\n\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Music;","import React from 'react';\r\nimport styles from './Settings.module.css';\r\n\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Settings;","const SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Dmitriy', avatar: 'https://1avatara.ru/pic/animal/animal0013.jpg'},\r\n        { id: 2, name: 'Andrey', avatar: 'https://1avatara.ru/pic/animal/animal0029.jpg'},\r\n        { id: 3, name: 'Michail', avatar: 'https://1avatara.ru/pic/animal/animal0033.jpg'},\r\n        { id: 4, name: 'Dasha', avatar: 'http://1avatara.ru/pic/animal/animal0024.jpg'}\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hello' }\r\n    ]\r\n}\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 7, message: body }]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const sendMessageCreator = (newMessageBody) => {\r\n    return { type: SEND_MESSAGE, newMessageBody}\r\n};\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport styles from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/Dialogs/' + props.id\r\n    return (\r\n        <div className={styles.dialog + ' ' + styles.active}>\r\n            <NavLink to={path}><img src={props.avatar}/>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport styles from './../Dialogs.module.css'\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={styles.dialog}>{props.message}</div>\r\n    )\r\n};\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport styles from './FormsControl.module.css'\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {    // НОС для textarea\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Input = ({ input, meta, ...props }) => {   \r\nconst hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport styles from './Dialogs.module.css'\r\nimport { Redirect } from 'react-router-dom';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport MessageItem from './MessageItem/MessageItem';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControl/FormsControl';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validator';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( (d) => <DialogItem avatar={d.avatar} name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map( (m) => <MessageItem message={m.message} key={m.id}/>);\r\n\r\n    let newMessageBody = state.newMessageBody; \r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (props.isAuth == false) return <Redirect to={'/login'} />\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n           \r\n            <div className={styles.messages}>\r\n                <div>{messagesElements}</div>\r\n                <MessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst max10 = maxLengthCreator(10);\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, max10]}\r\n                       name='newMessageBody' \r\n                       placeholder='Enter your message'/>\r\n            </div>\r\n\r\n            <div><button>SEND</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageFormRedux = reduxForm({\r\n    form:'dialogMessageForm'\r\n})(MessageForm)\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    \r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n                if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n                \r\n                return <Component {...this.props} />\r\n        }\r\n    }\r\n    let mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n    let connectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return connectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux'; \r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => { \r\n    return{\r\n        dialogsPage:state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {      \r\n    return{\r\n        sendMessage: (newMessageBody) => {dispatch(sendMessageCreator(newMessageBody))},\r\n    }\r\n}\r\n\r\nlet DialogsContainer = compose (\r\n    connect (mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect  \r\n) (Dialogs)\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user2.jpg'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Button } from 'antd';\r\n\r\nlet User = ({user, folowingInProgress, unfollow, follow, ...props}) => {\r\n    return ( \r\n        <div>\r\n            {\r\n                    <div key={user.id}>\r\n                        <span>\r\n                            <div>\r\n                                <NavLink to={'/profile/' + user.id}>\r\n                                    <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto} />\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>\r\n                                {user.followed\r\n                                    ? <Button disabled={folowingInProgress.some(id => id === user.id)} onClick={() => {     \r\n                                        unfollow(user.id)\r\n                                    }} type=\"primary\" ghost>unFOllOW</Button>\r\n\r\n                                    : <Button disabled={folowingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                        follow(user.id)\r\n                                    }} type=\"primary\" ghost>FOllOW</Button>}\r\n                            </div>\r\n                        </span>\r\n                        <span>\r\n                            <span>\r\n                                <div>{user.name}</div>\r\n                                <div>{user.status}</div>\r\n                            </span>\r\n                            <span>\r\n                                <div>{\"user.location.country\"}</div>\r\n                                <div>{\"user.location.city\"}</div>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default User;","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\n\r\nlet Paginator = ({totalUsersCount, currentPage, pageSize, onPageChanged, portionsSize=10, ...props}) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil (pagesCount / portionsSize);  \r\n    let [portionNumner, setPortionNumner] = useState(1);\r\n    let leftPortionPageNunber = (portionNumner - 1) * (portionsSize + 1); \r\n    let rightPortionPageNunber = portionNumner * (portionsSize + 1);\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumner > 1 &&\r\n                <button onClick={() => { setPortionNumner(portionNumner - 1) }}>PREV</button>\r\n            }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNunber && p <= rightPortionPageNunber)\r\n                .map(p => {\r\n                    return <span className={({\r\n                        [styles.selectPage]: currentPage === p\r\n                    }, styles.pageNumber)}\r\n                        key={p}\r\n                        onClick={(e) => { onPageChanged(p) }}>{p}</span>\r\n                })}\r\n\r\n            {portionCount > portionNumner &&\r\n                <button onClick={() => { setPortionNumner(portionNumner + 1) }}>NEXT</button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport User from './user';\r\nimport Paginator from '../common/Paginator/Paginator';\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, ...props}) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage}\r\n                totalUsersCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n                onPageChanged={onPageChanged} />\r\n            <div>\r\n                {\r\n                    props.users.map(u => <User user={u}\r\n                        key={u.id}\r\n                        folowingInProgress={props.folowingInProgress}\r\n                        follow={props.follow}\r\n                        unfollow={props.unfollow} />)\r\n\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create(    \r\n    {\r\n        withCredentials: true,\r\n        baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n        headers: {'API-KEY': 'c79fa325-f895-4b38-87f8-be88f765c262'} \r\n    })\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage=1, pageSize=10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {                  \r\n                return response.data;\r\n            })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId) \r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId) \r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status} ) \r\n    },\r\n    savePhoto(photoFile) {                  \r\n        const formData = new FormData();\r\n        formData.append('image', photoFile)\r\n\r\n        return instance.put(`profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multypart/form-data'\r\n            }\r\n        } ) \r\n    },\r\n    saveProfile(profile) {                  \r\n        return instance.put(`profile`, profile )\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me(){\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null){\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl(){\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { usersAPI } from \"../api/api\";\r\n\r\nconst FOLLOW ='FOLLOW';                             \r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\r\n\r\nlet initialState = {                     \r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 1000,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    folowingInProgress: []\r\n}\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,                         \r\n                 users: state.users.map( u => {                  \r\n                    if(u.id===action.userId){\r\n                        return {...u, followed: true}\r\n                     }\r\n                    return u\r\n                } )    \r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,                          \r\n                users: state.users.map( u => {                  \r\n                    if(u.id===action.userId){\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                } )    \r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                 folowingInProgress: action.isFetching\r\n                  ? [...state.folowingInProgress, action.userId]\r\n                  : state.folowingInProgress.filter(id => id !== action.userId)\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\nexport const followAC = (userId) => { return { type: FOLLOW, userId } };\r\nexport const unfollowAC = (userId) => { return {type: UNFOLLOW, userId } };\r\nexport const setUsersAC = (users) => { return {type: SET_USERS, users } };\r\nexport const setCurrentPageAC = (currentPage) => { return {type: SET_CURRENT_PAGE, currentPage } };\r\nexport const setTotalUsersCountAC = (totalUsersCount) => { return {type: SET_TOTAL_USERS_COUNT, count: totalUsersCount} };\r\nexport const toggleIsFetchingAC = (isFetching) => { return {type: TOGGLE_IS_FETCHING, isFetching} };\r\nexport const toggleFolowingProgressAC = (isFetching, userId) => { return {type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId} };\r\n\r\n\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {                \r\n    return async (dispatch) => {     \r\n        dispatch(toggleIsFetchingAC(true));\r\n        dispatch(setCurrentPageAC(currentPage));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)   \r\n            dispatch(toggleIsFetchingAC(false))\r\n            dispatch(setUsersAC(data.items))\r\n            dispatch (setTotalUsersCountAC (data.totalCount))\r\n    }\r\n}\r\n\r\nexport const followThunk = (userId) => {                \r\n    return (dispatch) => {\r\n        dispatch (toggleFolowingProgressAC(true, userId))\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                debugger\r\n                if (response.data.resultCode == 0) { dispatch (followAC(userId)) }\r\n                dispatch (toggleFolowingProgressAC(false, userId))\r\n            })\r\n    }\r\n}\r\nexport const unfollowThunk = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch (toggleFolowingProgressAC(true, userId))\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) { dispatch (unfollowAC(userId)) }\r\n                dispatch (toggleFolowingProgressAC(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport preloader from '../../../assets/images/loader2.gif'\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import { createSelector } from \"reselect\"\r\n\r\nexport const getUsersSimpleSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSimpleSelector, (users)=> {\r\n    return users.filter(u => true)\r\n})\r\n\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFolowingInProgress = (state) => {\r\n    return state.usersPage.folowingInProgress\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport { connect } from 'react-redux';\r\nimport Users from './users.jsx';\r\nimport { setCurrentPageAC, toggleFolowingProgressAC, getUsersThunkCreator, followThunk, unfollowThunk } from '../../redux/users-reducer';\r\nimport Preloader from '../common/preloader/preloader';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getPageSize, getTotalUsersCount,getCurrentPage,getIsFetching,getFolowingInProgress, getUsers } from '../../redux/user-selectors';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {              \r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize)  \r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsersThunk(pageNumber , this.props.pageSize)\r\n    }\r\n    render() {                                           \r\n        return <> \r\n            {this.props.isFetching ? <Preloader /> : null}           \r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                onPageChanged={this.onPageChanged}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                toggleFolowingProgress={this.props.toggleFolowingProgress}\r\n                folowingInProgress={this.props.folowingInProgress} />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),            \r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        folowingInProgress: getFolowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose (\r\n    withAuthRedirect,\r\n    connect (mapStateToProps, {\r\n        follow: followThunk,\r\n        unfollow: unfollowThunk ,\r\n        setCurrentPage: setCurrentPageAC, \r\n        toggleFolowingProgress: toggleFolowingProgressAC,\r\n        getUsersThunk: getUsersThunkCreator\r\n    }),             \r\n) (UsersContainer)\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let activeEditMode = () => {\r\n        setEditMode(true)\r\n    } \r\n    let deActiveEditMode  = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)               \r\n    }\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status:</b><span onDoubleClick={activeEditMode}>{props.status || 'No status'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} onBlur={deActiveEditMode} autoFocus={true}\r\n                           value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeEditMode = () => {\r\n        this.setState({editMode:true})               \r\n    }\r\n    deActiveEditMode  = () => {\r\n        this.setState({editMode:false})\r\n        this.props.updateStatus(this.state.status)               \r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value         \r\n        })\r\n    }\r\n    componentDidUpdate (prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status) {   \r\n            this.setState({\r\n                status:this.props.status\r\n            })\r\n        }\r\n        console.log('dddd')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&        \r\n                    <div>\r\n                        <span onDoubleClick={this.activeEditMode}>{this.state.status || 'No status'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActiveEditMode}  value={this.state.status}  />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input, Textarea } from '../../common/FormsControl/FormsControl';\r\nimport styles from './../../common/FormsControl/FormsControl.module.css'\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><button>save</button></div>\r\n            {error &&\r\n                <div className={styles.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n            <div>\r\n                <b>Full name:</b> <Field placeholder={'Name'} name={'fullName'} component={Input} />\r\n            </div>\r\n            <div>\r\n                <b>Looking for a JOB:</b> <Field name={'lookingForAJob'} component={Input} type={'checkbox'} />\r\n            </div>\r\n            <div>\r\n                <b>My proffesional skills:</b> <Field placeholder={'My proffesional skills'} name={'lookingForAJobDescription'} component={Textarea} />\r\n            </div>\r\n            <div>\r\n                <b>About me:</b> <Field placeholder={'About me'} name={'aboutMe'} component={Textarea} />\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key} className={style.contact}>\r\n                        <b>{key}:<Field placeholder={key} name={'contacts.' + key} component={Input} /></b>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n export const ProfileDataFormRedux = reduxForm ({\r\n    form: 'editProfile'\r\n}) (ProfileDataForm)\r\n\r\n","import React, { useState } from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/user2.jpg'\r\nimport { ProfileDataFormRedux } from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({profile,status,updateStatus,isOwner,saveProfile, ...props}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if(!profile){\r\n        return <Preloader />\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) =>{\r\n        saveProfile(formData).then(()=>{\r\n            setEditMode(false)\r\n        })\r\n     }\r\n\r\n    return (\r\n        <div >\r\n            <div className={style.discriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={style.mainPhoto} />\r\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}\r\n\r\n                {editMode\r\n                    ? <ProfileDataFormRedux initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={()=> {setEditMode(true)}} \r\n                                   profile={profile} \r\n                                   isOwner={isOwner}/>}\r\n\r\n                <ProfileStatusWithHooks status={status}\r\n                    updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}   \r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n            <div>\r\n                <b>Full name:</b> {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a JOB:</b> {profile.lookingForAJob ? 'YES' : 'NO'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My proffesional skills:</b> {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>About me:</b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={style.contact}> <b>{contactTitle}:</b> {contactValue}</div>\r\n}\r\nexport default ProfileInfo;","import { stopSubmit } from \"redux-form\";\r\nimport { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST ='ADD-POST';                             \r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_STATUS = 'SET-STATUS';\r\nconst DELETE_POST = 'DELETE-POST'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE-PHOTO-SUCCESS'\r\n\r\nlet initialState = {                     \r\n    posts: [\r\n        { id: 1, message: 'Hello', likesCount: '12' },\r\n        { id: 2, message: 'Hi', likesCount: '32' },\r\n        { id: 3, message: 'How are you?', likesCount: '23' }\r\n    ],\r\n    newPostText: \"\",\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:{\r\n            let newPost = {\r\n                id: 7,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            let stateCopy = {\r\n                ...state,\r\n                posts:[...state.posts, newPost],\r\n                newPostText: ''\r\n            }              \r\n            return stateCopy;\r\n        }\r\n        case SET_USER_PROFILE :{\r\n            return{\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS :{\r\n            return{\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST :{\r\n            return{\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS :{\r\n            return{\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return { type: ADD_POST, newPostText }\r\n};\r\nexport const setUserProfile = (profile) => {\r\n    return { type: SET_USER_PROFILE, profile }\r\n};\r\nexport const setStatus = (status) => {\r\n    return { type: SET_STATUS, status }\r\n};\r\nexport const deletePost = (postId) => {\r\n    return { type: DELETE_POST, postId }\r\n};\r\nexport const savePhotoSuccess = (photos) => {\r\n    return { type: SAVE_PHOTO_SUCCESS, photos }\r\n};\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {             \r\n    let response = await usersAPI.getProfile(userId)            \r\n    \r\n    dispatch (setUserProfile(response.data)) \r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {         \r\n    let response = await profileAPI.getStatus(userId)   \r\n             \r\n    dispatch (setStatus(response.data))\r\n};\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status).then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    })\r\n};\r\nexport const savePhoto = (file) => (dispatch) => {\r\n    profileAPI.savePhoto(file).then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(response.data.data.photos))\r\n        }\r\n    })\r\n};\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId))\r\n    } else {\r\n        dispatch(stopSubmit('editProfile', {_error:response.data.messages[0]}))\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n};\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport styles from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={styles.item}>\r\n            <div>\r\n                <span>{props.likesCount}</span>\r\n            </div>\r\n            <div>\r\n                <img src='https://avatars.mds.yandex.net/get-pdb/1655359/523fff70-896c-4166-b041-161e1b53dce8/s1200?webp=false' />\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Post; ","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validator';\r\nimport { Textarea } from '../../common/FormsControl/FormsControl';\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo( (props) => {\r\n\r\n    let PostsElements = props.posts\r\n    .map( p => <Post key={p.id} message={p.message} likesCount={'LIKE',p.likesCount}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n   \r\n    return (\r\n        <div className={styles.postsBlock}>\r\n            <h3>My post</h3>\r\n            <MyPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={styles.posts}>\r\n\r\n                {PostsElements}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst MyPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} \r\n                       placeholder='Post message'\r\n                       name='newPostText' \r\n                       validate={[required, maxLength10]}/>            \r\n            </div>\r\n            <div>\r\n                <button>POST</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst MyPostFormRedux = reduxForm({\r\n    form: 'profileAddNewPostForm'\r\n}) (MyPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: (newPostText) => {\r\n            dispatch( addPostActionCreator(newPostText))   \r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                isOwner={props.isOwner}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profile-reducer'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId                   \r\n        if (!userId) {\r\n            userId = this.props.authUserId\r\n            if (!userId) {\r\n               this.props.history.push('./login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)             \r\n        this.props.getStatus(userId)\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                profile={this.props.profile}\r\n                isOwner={!this.props.match.params.userId}           \r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto} />              \r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose (\r\n    connect (mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect         \r\n) (ProfileContainer)    ","import React from 'react';\r\nimport styles from'./Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Layout, Menu, Avatar, Row, Col, Button } from 'antd';\r\nimport { UserOutlined} from '@ant-design/icons';\r\n\r\nconst Header = (props) => {\r\n    const { Header } = Layout;\r\n    return (\r\n        <Header className=\"header\">\r\n            <div className=\"logo\" />\r\n            <Row>\r\n                <Col span={20}>\r\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                        <Menu.Item key=\"1\"><NavLink to='/users'>Users</NavLink></Menu.Item>\r\n                    </Menu>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Avatar style={{ backgroundColor: '#87d068' }} icon={<UserOutlined />} />\r\n                    <div className={styles.loginBlock}>\r\n                        {props.isAuth\r\n                            ? <div className={styles.name}>{props.login} - <Button type=\"primary\" onClick={props.logout}>Log out</Button></div>\r\n                            : <NavLink to={'/login'}>Login</NavLink>}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Header>\r\n    )\r\n}\r\nexport default Header;","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI, securityAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA ='SET-USER-DATA';                             \r\nconst GET_CAPTCHA_URL_SUCCESS ='GET-CAPTCHA-URL-SUCCESS';                             \r\n\r\n\r\nlet initialState = {  \r\n    id: null,                   \r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => {\r\n    return { type: SET_USER_DATA, payload: { id, email, login, isAuth } }\r\n};\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => {\r\n    return { type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl} }\r\n};\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()                        \r\n       \r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data\r\n            dispatch (setAuthUserData(id, email, login, true) )   \r\n        }\r\n};\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n                            \r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())      \r\n        } else {\r\n            if(response.data.resultCode === 10) {\r\n                dispatch(getCaptchaUrl())\r\n            }\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some ERROR'; \r\n            dispatch(stopSubmit('login', {_error: message}))    \r\n        }\r\n};\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url\r\ndebugger\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout().then(response => {                        \r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))      \r\n        }\r\n    })\r\n};\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer'\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state)=> ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect (mapStateToProps, {logout}) (HeaderContainer)","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required } from '../../utils/validators/validator';\r\nimport { Input } from '../common/FormsControl/FormsControl';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom';\r\nimport styles from './../common/FormsControl/FormsControl.module.css'\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'} name={'email'} component={Input}\r\n                       validate={[required]}/>     \r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} component={Input} type={'password'}\r\n                       validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={'checkbox'} name={'rememberMe'} component={Input}\r\n                       validate={[required]}/> remember me\r\n            </div>\r\n\r\n            {captchaUrl && <img src={captchaUrl}/>}\r\n            {captchaUrl && <Field name={'captcha'} component={Input}  validate={[required]}/>}\r\n\r\n            {error &&                                         \r\n                <div className={styles.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm ({         \r\n    form: 'login'\r\n}) (LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) =>{\r\n       props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if(props.isAuth){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect (mapStateToProps, {login}) (Login);   ","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZATED ='SET-INITIALIZATED';                             \r\n\r\nlet initialState = {  \r\n    initializated: false\r\n}\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZATED:\r\n            return {\r\n                ...state,\r\n                initializated: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport const initializatedSuccess = () => { return {type: SET_INITIALIZATED}};\r\n\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    \r\n    Promise.all([promise])\r\n    .then(() => {\r\n        dispatch(initializatedSuccess())\r\n    })\r\n\r\n};\r\n\r\n\r\nexport default appReducer","import React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport Nav from './components/Nav/Nav';\nimport {Route, withRouter} from 'react-router-dom';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/login/login';\nimport { initializeApp } from './redux/app-reducer';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport Preloader from './components/common/preloader/preloader';\nimport { NavLink } from 'react-router-dom';\n\nimport { Layout, Menu, Breadcrumb,Avatar, Row, Col } from 'antd';\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n  render() {\n    if(!this.props.initializated) {\n      return <Preloader/>\n    }\n    \n    return (\n      <Layout>\n        <HeaderContainer />\n        <Content style={{ padding: '0 50px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\n          </Breadcrumb>\n          <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n            <Sider className=\"site-layout-background\" width={200}>\n              <Menu\n                mode=\"inline\"\n                defaultSelectedKeys={['2']}\n                defaultOpenKeys={['sub1']}\n                style={{ height: '100%' }}\n              >\n                <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"My profile\">\n                  <Menu.Item key=\"1\"><NavLink to='/profile'>Profile</NavLink></Menu.Item>\n                  <Menu.Item key=\"2\"><NavLink to='/dialogs'>Masseges</NavLink></Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"sub2\" icon={<UserOutlined />} title=\"Users\">\n                  <Menu.Item key=\"3\"><NavLink to='/users'>Users</NavLink></Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"sub3\" icon={<LaptopOutlined />} title=\"subnav\">\n                  <Menu.Item key=\"4\"><NavLink to='/news'>News</NavLink></Menu.Item>\n                  <Menu.Item key=\"5\"><NavLink to='/music'>Music</NavLink></Menu.Item>\n                  <Menu.Item key=\"6\"><NavLink to='/settings'>Settings</NavLink></Menu.Item>\n                </SubMenu>\n              </Menu>\n            </Sider>\n            <Content style={{ padding: '0 24px', minHeight: 280 }}>\n              <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n              <Route path='/dialogs' render={() => <DialogsContainer />} />\n              <Route path='/users' render={() => <UsersContainer />} />\n              <Route path='/news' render={() => <News />} />\n              <Route path='/music' component={Music} />\n              <Route path='/settings' component={Settings} />\n              <Route path='/login' render={() => <Login />} />\n            </Content>\n          </Layout>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>demo-project</Footer>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initializated: state.app.initializated\n})\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App)\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk'  \r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './app-reducer';\r\n\r\n\r\nlet reducers = combineReducers({              \r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app:appReducer\r\n});\r\n\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));        \r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';  \nimport {Provider} from 'react-redux';       \nimport { BrowserRouter } from 'react-router-dom';\n\n  ReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n  );\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1slVo\",\"dialogsItems\":\"Dialogs_dialogsItems__1BfSL\",\"active\":\"Dialogs_active__3vSWf\",\"dialog\":\"Dialogs_dialog__RBKuy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControl_error__1hDmw\",\"formSummaryError\":\"FormsControl_formSummaryError__3vDGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__j7Chi\",\"item\":\"Nav_item__2PX-r\",\"gold\":\"Nav_gold__28BN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__2_qjK\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3IZob\",\"contact\":\"ProfileInfo_contact__2HjQr\"};"],"sourceRoot":""}